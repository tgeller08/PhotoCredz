{"version":3,"file":"static/js/main.297ddf21.js","mappings":"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","sources":["components/Button.js","components/ImageViewer.js","components/CircleButton.js","components/IconButton.js","components/EmojiPicker.js","components/EmojiList.js","components/EmojiSticker.js","components/CreditSticker.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet, View, Pressable, Text } from 'react-native';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\n\nexport default function Button({ label, theme, onPress }) {\n  if (theme === \"primary\") {\n    return (\n      <View\n      style={[styles.buttonContainer, { borderWidth: 4, borderColor: \"#ffd33d\", borderRadius: 18 }]}\n      >\n        <Pressable\n          style={[styles.button, { backgroundColor: \"#fff\" }]}\n          onPress={onPress}\n        >\n          <FontAwesome\n            name=\"picture-o\"\n            size={18}\n            color=\"#25292e\"\n            style={styles.buttonIcon}\n          />\n          <Text style={[styles.buttonLabel, { color: \"#25292e\" }]}>{label}</Text>\n        </Pressable>\n    </View>\n    );\n  }\n\n  return (\n    <View style={styles.buttonContainer}>\n        <Pressable style={styles.button} onPress={onPress}>\n          <Text style={styles.buttonLabel}>{label}</Text>\n        </Pressable>\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    width: 320,\n    height: 68,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 3,\n  },\n  button: {\n    borderRadius: 10,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  buttonIcon: {\n    paddingRight: 8,\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontSize: 16,\n  },\n});\n","import { StyleSheet, Image } from 'react-native';\n\nexport default function ImageViewer({ placeholderImageSource, selectedImage }) {\n    const imageSource = selectedImage !== null\n      ? { uri: selectedImage }\n      : placeholderImageSource;\n  \n    return <Image source={imageSource} style={styles.image} />;\n  }\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 320,\n    height: 440,\n    borderRadius: 18,\n  },\n});\n","import { View, Pressable, StyleSheet } from 'react-native';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\n\nexport default function CircleButton({ onPress }) {\n  return (\n    <View style={styles.circleButtonContainer}>\n      <Pressable style={styles.circleButton} onPress={onPress}>\n        <MaterialIcons name=\"add\" size={38} color=\"#25292e\" />\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  circleButtonContainer: {\n    width: 84,\n    height: 84,\n    marginHorizontal: 60,\n    borderWidth: 4,\n    borderColor: '#ffd33d',\n    borderRadius: 42,\n    padding: 3,\n  },\n  circleButton: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 42,\n    backgroundColor: '#fff',\n  },\n});\n","import { Pressable, StyleSheet, Text } from 'react-native';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\n\nexport default function IconButton({ icon, label, onPress }) {\n  return (\n    <Pressable style={styles.iconButton} onPress={onPress}>\n      <MaterialIcons name={icon} size={24} color=\"#fff\" />\n      <Text style={styles.iconButtonLabel}>{label}</Text>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  iconButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 84,\n    height: 84,\n  },\n  iconButtonLabel: {\n    color: '#fff',\n    marginTop: 12,\n  },\n});\n","import { Modal, View, Text, Pressable, StyleSheet, TextInput, Button} from 'react-native';\nimport { useState, useRef } from 'react';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\n\nexport default function EmojiPicker({ isVisible, children, onClose }) {\n\n    const [inputText, setInputText] = useState('');\n\n\n  return (\n    // <Modal animationType=\"slide\" transparent={true}  visible={isVisible}>\n    //   <View style={styles.modalContent}>\n    //   <Text style={styles.title}>Add A Credit</Text>\n    //   <TextInput\n    //     style={{\n    //         height: 40,\n    //         borderColor: 'gray',\n    //         borderWidth: 1,\n    //         paddingLeft: 10,\n    //         paddingRight: 10,\n    //         borderRadius: 5,\n    //         backgroundColor: 'white',\n    //         color: 'black',\n    //         fontSize: 16,\n    //         fontWeight: 'bold',\n    //       }}\n    //     onChangeText={text => setInputText(text)}\n    //     value={inputText}\n    //     placeholder=\"Enter text here\"\n    //     />\n    //     <Button title=\"Save\" onPress={onClose} />\n    //   </View>\n    // </Modal>\n\n    <Modal animationType=\"slide\" transparent={true} visible={isVisible}>\n      <View style={styles.modalContent}>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>Choose a sticker</Text>\n          <Pressable onPress={onClose}>\n            <MaterialIcons name=\"close\" color=\"#fff\" size={22} />\n          </Pressable>\n        </View>\n        {children}\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n    modalContent: {\n      height: '25%',\n      width: '100%',\n      backgroundColor: '#25292e',\n      borderTopRightRadius: 18,\n      borderTopLeftRadius: 18,\n      position: 'absolute',\n      bottom: 0,\n    },\n    titleContainer: {\n      height: '16%',\n      backgroundColor: '#464C55',\n      borderTopRightRadius: 10,\n      borderTopLeftRadius: 10,\n      paddingHorizontal: 20,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    title: {\n      color: '#fff',\n      fontSize: 16,\n      alignItems: 'center',\n    },\n    pickerContainer: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingHorizontal: 50,\n      paddingVertical: 20,\n    },\n  });\n  ","import { useState } from 'react';\nimport { StyleSheet, FlatList, Image, Platform, Pressable } from 'react-native';\n\nexport default function EmojiList({ onSelect, onCloseModal }) {\n  const [emoji] = useState([\n    require('../assets/images/emoji1.png'),\n    require('../assets/images/emoji2.png'),\n    require('../assets/images/emoji3.png'),\n    require('../assets/images/emoji4.png'),\n    require('../assets/images/emoji5.png'),\n    require('../assets/images/emoji6.png'),\n  ]);\n\n  return (\n    <FlatList\n      horizontal\n      showsHorizontalScrollIndicator={Platform.OS === 'web' ? true : false}\n      data={emoji}\n      contentContainerStyle={styles.listContainer}\n      renderItem={({ item, index }) => {\n        return (\n          <Pressable\n            onPress={() => {\n              onSelect(item);\n              onCloseModal();\n            }}>\n            <Image source={item} key={index} style={styles.image} />\n          </Pressable>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  listContainer: {\n    borderTopRightRadius: 10,\n    borderTopLeftRadius: 10,\n    paddingHorizontal: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginRight: 20,\n  },\n});\n","import { View, Image, Text, StyleSheet } from 'react-native';\nimport { PanGestureHandler, TapGestureHandler } from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  useAnimatedGestureHandler,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst AnimatedView = Animated.createAnimatedComponent(View);\n\nexport default function EmojiSticker({ imageSize, stickerSource }) {\n\n    const translateX = useSharedValue(0);\n    const translateY = useSharedValue(0);\n\n    const scaleImage = useSharedValue(imageSize);\n\n    const onDoubleTap = useAnimatedGestureHandler({\n        onActive: () => {\n            if (scaleImage.value) {\n            scaleImage.value = scaleImage.value * 2;\n            }\n        },\n        });\n    const imageStyle = useAnimatedStyle(() => {\n        return {\n            width: withSpring(scaleImage.value),\n            height: withSpring(scaleImage.value),\n        };\n        });\n\n    const onDrag = useAnimatedGestureHandler({\n        onStart: (event, context) => {\n            context.translateX = translateX.value;\n            context.translateY = translateY.value;\n        },\n        onActive: (event, context) => {\n            translateX.value = event.translationX + context.translateX;\n            translateY.value = event.translationY + context.translateY;\n        },\n        });\n    const containerStyle = useAnimatedStyle(() => {\n        return {\n            transform: [\n            {\n                translateX: translateX.value,\n            },\n            {\n                translateY: translateY.value,\n            },\n            ],\n        };\n        });\n  return (\n    <PanGestureHandler onGestureEvent={onDrag}>\n    <AnimatedView style={[containerStyle, { top: -350 }]}>\n     <TapGestureHandler onGestureEvent={onDoubleTap} numberOfTaps={2}>\n      <AnimatedImage\n        source={stickerSource}\n        resizeMode=\"contain\"\n        style={[imageStyle, { width: imageSize, height: imageSize }]}\n      />\n    </TapGestureHandler>\n    </AnimatedView>\n    </PanGestureHandler>\n  );\n}\n\n","import { View, Image, Text, StyleSheet } from 'react-native';\nimport { PanGestureHandler, TapGestureHandler } from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  useAnimatedGestureHandler,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst AnimatedView = Animated.createAnimatedComponent(View);\n\nexport default function CreditSticker({ imageSize, creditSource }) {\n\n    const translateX = useSharedValue(0);\n    const translateY = useSharedValue(0);\n\n    const scaleImage = useSharedValue(imageSize);\n\n    const onDoubleTap = useAnimatedGestureHandler({\n        onActive: () => {\n            if (scaleImage.value) {\n            scaleImage.value = scaleImage.value * 2;\n            }\n        },\n        });\n    const imageStyle = useAnimatedStyle(() => {\n        return {\n            width: withSpring(scaleImage.value),\n            height: withSpring(scaleImage.value),\n        };\n        });\n\n    const onDrag = useAnimatedGestureHandler({\n        onStart: (event, context) => {\n            context.translateX = translateX.value;\n            context.translateY = translateY.value;\n        },\n        onActive: (event, context) => {\n            translateX.value = event.translationX + context.translateX;\n            translateY.value = event.translationY + context.translateY;\n        },\n        });\n    const containerStyle = useAnimatedStyle(() => {\n        return {\n            transform: [\n            {\n                translateX: translateX.value,\n            },\n            {\n                translateY: translateY.value,\n            },\n            ],\n        };\n        });\n  return (\n    <PanGestureHandler onGestureEvent={onDrag}>\n    <AnimatedView style={[containerStyle, { top: -350 }]}>\n     <TapGestureHandler onGestureEvent={onDoubleTap} numberOfTaps={2}>\n      {/* <AnimatedImage\n        source={stickerSource}\n        resizeMode=\"contain\"\n        style={[imageStyle, { width: imageSize, height: imageSize }]}\n      /> */}\n      <AnimatedText>PhotoCredz: {creditSource}</AnimatedText>\n    </TapGestureHandler>\n    </AnimatedView>\n    </PanGestureHandler>\n  );\n}\n\n","import { useState, useRef } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image, Platform, Alert } from 'react-native';\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { captureRef } from 'react-native-view-shot';\nimport domtoimage from 'dom-to-image';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as MediaLibrary from 'expo-media-library';\n\n\nimport Button from './components/Button';\nimport ImageViewer from './components/ImageViewer';\nimport CircleButton from './components/CircleButton';\nimport IconButton from './components/IconButton';\nimport EmojiPicker from \"./components/EmojiPicker\";\nimport EmojiList from './components/EmojiList';\nimport EmojiSticker from './components/EmojiSticker';\nimport CreditSticker from './components/CreditSticker';\n\nconst PlaceholderImage = require('./assets/images/background-image.png');\n\nexport default function App() {\n  const [pickedEmoji, setPickedEmoji] = useState('');\n  const [pickedCredit, setPickedCredit] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [showAppOptions, setShowAppOptions] = useState(false);\n  const [status, requestPermission] = MediaLibrary.usePermissions();\n  const imageRef = useRef();\n\n\n  const pickImageAsync = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n      setShowAppOptions(true);\n    } else {\n      alert('You did not select any image.');\n    }\n  };\n\n  const onReset = () => {\n    setPickedCredit(null)\n    setPickedEmoji(null)\n    setShowAppOptions(false);\n  };\n\n  const onAddSticker = () => {\n    setIsModalVisible(true);\n  };\n\n  const onAddCredit = () => {\n    Alert.prompt(\n      'Who took the photo?',\n      'Please enter the name:',\n      (text) => setPickedCredit(text),\n      undefined,\n      // 'default'\n    );\n  };\n\n  const onModalClose = () => {\n    setIsModalVisible(false);\n  };\n\n  const onSaveImageAsync = async () => {\n    //setIsModalVisible(false);\n    if (Platform.OS !== 'web') {\n    try {\n      const localUri = await captureRef(imageRef, {\n        height: 440,\n        quality: 1,\n      });\n\n      await MediaLibrary.saveToLibraryAsync(localUri);\n      if (localUri) {\n        alert(\"Saved!\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n    }  else {\n      try {\n        const dataUrl = await domtoimage.toJpeg(imageRef.current, {\n          quality: 0.95,\n          width: 320,\n          height: 440,\n        });\n  \n        let link = document.createElement('a');\n        link.download = 'sticker-smash.jpeg';\n        link.href = dataUrl;\n        link.click();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  if (status === null) {\n    requestPermission();\n  }\n\n  return (\n    <Text>Hello</Text>\n    // <GestureHandlerRootView style={styles.container}>\n    //    <View style={styles.imageContainer}>\n    //     <View ref={imageRef} collapsable={false}>\n    //    <ImageViewer\n    //       placeholderImageSource={PlaceholderImage}\n    //       selectedImage={selectedImage}\n    //     />\n    //     {pickedEmoji !== null ? <EmojiSticker imageSize={40} stickerSource={pickedEmoji} /> : null}\n    //     {pickedCredit !== null ? <CreditSticker imageSize={40} creditSource={pickedCredit} /> : null}\n    //     </View>\n    //   </View>\n    //   {showAppOptions ? (\n    //     <View style={styles.optionsContainer}>\n    //     <View style={styles.optionsRow}>\n    //       <IconButton icon=\"refresh\" label=\"Reset\" onPress={onReset} />\n    //       <IconButton icon=\"brush\" label=\"Add Sticker\" onPress={onAddSticker} />\n    //       <IconButton icon=\"edit\" label=\"Add Credit\" onPress={onAddCredit} />\n    //       {/* <CircleButton onPress={onAddSticker} /> */}\n    //       <IconButton icon=\"save-alt\" label=\"Save\" onPress={onSaveImageAsync} />\n    //     </View>\n    //   </View>\n    //   ) : (\n    //   <View style={styles.footerContainer}>\n    //     <Button theme=\"primary\" label=\"Choose a photo\" onPress={pickImageAsync}/>\n    //     <Button label=\"Use this photo\" onPress={() => setShowAppOptions(true)} />\n    //   </View>\n    //   )}\n    //   <EmojiPicker isVisible={isModalVisible} onClose={onModalClose}>\n    //     <EmojiList onSelect={setPickedEmoji} onCloseModal={onModalClose} />\n    //   </EmojiPicker>\n    //   <StatusBar style=\"light\" />\n    // </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#25292e',\n    alignItems: 'center',\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58,\n  },\n  image: {\n    width: 320,\n    height: 440,\n    borderRadius: 18,\n  },\n  footerContainer: {\n    flex: 1 / 3,\n    alignItems: 'center',\n  },\n  optionsContainer: {\n    position: 'absolute',\n    bottom: 80,\n  },\n  optionsRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/PhotoCredz/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [552], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["StyleSheet","buttonContainer","width","height","marginHorizontal","alignItems","justifyContent","padding","button","borderRadius","flexDirection","buttonIcon","paddingRight","buttonLabel","color","fontSize","image","circleButtonContainer","borderWidth","borderColor","circleButton","flex","backgroundColor","iconButton","iconButtonLabel","marginTop","modalContent","borderTopRightRadius","borderTopLeftRadius","position","bottom","titleContainer","paddingHorizontal","title","pickerContainer","paddingVertical","listContainer","marginRight","Animated","Image","Text","View","require","App","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setSelectedImage","_useState7","_useState8","_useState9","_useState10","setShowAppOptions","_MediaLibrary$usePerm","MediaLibrary","usePermissions","_MediaLibrary$usePerm2","status","requestPermission","imageRef","useRef","_ref","_asyncToGenerator","result","ImagePicker","launchImageLibraryAsync","allowsEditing","quality","canceled","alert","assets","uri","_ref2","Platform","localUri","captureRef","saveToLibraryAsync","e","console","log","dataUrl","domtoimage","current","link","document","createElement","download","href","click","_jsx","children","container","imageContainer","paddingTop","footerContainer","optionsContainer","optionsRow","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}